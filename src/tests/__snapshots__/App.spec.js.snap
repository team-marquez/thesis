// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div>
                <div
                        style={
                                Object {
                                        "marginBottom": "15px",
                                        "textAlign": "center",
                                      }
                        }
                >
                        <LoginButton
                                changeUser={[Function]}
                                home={[Function]}
                                image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                                openOnboarding={[Function]}
                                user="Welcome User"
                        />
                </div>
                <div
                        style={
                                Object {
                                        "display": "inline-block",
                                      }
                        }
                >
                        <LocationModal
                                pickTrip={[Function]}
                        />
                </div>
                <Footer />
                <Onboarding
                        closer={[Function]}
                        open={false}
                />
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div
                    style={
                              Object {
                                        "marginBottom": "15px",
                                        "textAlign": "center",
                                      }
                    }
          >
                    <LoginButton
                              changeUser={[Function]}
                              home={[Function]}
                              image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                              openOnboarding={[Function]}
                              user="Welcome User"
                    />
          </div>
          <div
                    style={
                              Object {
                                        "display": "inline-block",
                                      }
                    }
          >
                    <LocationModal
                              pickTrip={[Function]}
                    />
          </div>
          <Footer />
          <Onboarding
                    closer={[Function]}
                    open={false}
          />
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "marginBottom": "15px",
                                          "textAlign": "center",
                                        }
              }
>
              <LoginButton
                            changeUser={[Function]}
                            home={[Function]}
                            image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                            openOnboarding={[Function]}
                            user="Welcome User"
              />
</div>,
            <div
              style={
                            Object {
                                          "display": "inline-block",
                                        }
              }
>
              <LocationModal
                            pickTrip={[Function]}
              />
</div>,
            <Footer />,
            <Onboarding
              closer={[Function]}
              open={false}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <LoginButton
                changeUser={[Function]}
                home={[Function]}
                image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                openOnboarding={[Function]}
                user="Welcome User"
/>,
              "style": Object {
                "marginBottom": "15px",
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "changeUser": [Function],
                "home": [Function],
                "image": "https://react.semantic-ui.com/images/avatar/large/patrick.png",
                "openOnboarding": [Function],
                "user": "Welcome User",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <LocationModal
                pickTrip={[Function]}
/>,
              "style": Object {
                "display": "inline-block",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "pickTrip": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "closer": [Function],
              "open": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div>
                    <div
                              style={
                                        Object {
                                                  "marginBottom": "15px",
                                                  "textAlign": "center",
                                                }
                              }
                    >
                              <LoginButton
                                        changeUser={[Function]}
                                        home={[Function]}
                                        image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                                        openOnboarding={[Function]}
                                        user="Welcome User"
                              />
                    </div>
                    <div
                              style={
                                        Object {
                                                  "display": "inline-block",
                                                }
                              }
                    >
                              <LocationModal
                                        pickTrip={[Function]}
                              />
                    </div>
                    <Footer />
                    <Onboarding
                              closer={[Function]}
                              open={false}
                    />
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div>
            <div
                        style={
                                    Object {
                                                "marginBottom": "15px",
                                                "textAlign": "center",
                                              }
                        }
            >
                        <LoginButton
                                    changeUser={[Function]}
                                    home={[Function]}
                                    image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                                    openOnboarding={[Function]}
                                    user="Welcome User"
                        />
            </div>
            <div
                        style={
                                    Object {
                                                "display": "inline-block",
                                              }
                        }
            >
                        <LocationModal
                                    pickTrip={[Function]}
                        />
            </div>
            <Footer />
            <Onboarding
                        closer={[Function]}
                        open={false}
            />
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                style={
                                Object {
                                                "marginBottom": "15px",
                                                "textAlign": "center",
                                              }
                }
>
                <LoginButton
                                changeUser={[Function]}
                                home={[Function]}
                                image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                                openOnboarding={[Function]}
                                user="Welcome User"
                />
</div>,
              <div
                style={
                                Object {
                                                "display": "inline-block",
                                              }
                }
>
                <LocationModal
                                pickTrip={[Function]}
                />
</div>,
              <Footer />,
              <Onboarding
                closer={[Function]}
                open={false}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <LoginButton
                  changeUser={[Function]}
                  home={[Function]}
                  image="https://react.semantic-ui.com/images/avatar/large/patrick.png"
                  openOnboarding={[Function]}
                  user="Welcome User"
/>,
                "style": Object {
                  "marginBottom": "15px",
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "changeUser": [Function],
                  "home": [Function],
                  "image": "https://react.semantic-ui.com/images/avatar/large/patrick.png",
                  "openOnboarding": [Function],
                  "user": "Welcome User",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <LocationModal
                  pickTrip={[Function]}
/>,
                "style": Object {
                  "display": "inline-block",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "pickTrip": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "closer": [Function],
                "open": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
